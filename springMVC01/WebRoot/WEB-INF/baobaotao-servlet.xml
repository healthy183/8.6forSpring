<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"  
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
 	<!-- 默认的注解映射的支持 ,它会自动
 	注册DefaultAnnotationHandlerMapping 与AnnotationMethodHandlerAdapter -->
 	<!--<mvc:annotation-driven/> 下面转换器用到   -->  
	<!--自动扫描所有类 -->
	<context:component-scan base-package="com.baobaotao"></context:component-scan>
	 <!-- 拦截器 --> 
	 <mvc:interceptors>
	 	<mvc:interceptor>
			<mvc:mapping path="/testInterceptor/testInterceptorSuccess/*"/><!-- 拦截指定URL -->
			<bean class="com.baobaotao.interceptor.CommonInterceptor"></bean>
	 	</mvc:interceptor>  
	 </mvc:interceptors>
	  <!--WEB异常解析处理-->
	<bean id="exceptionResolver" class="com.baobaotao.exception.MyExceptionResolver">
		<property name="defaultErrorView">
			<value>error/showError</value>
		</property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error/showError</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- springMVC的基本跳转控制器配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	
	
	
	
	<!-- 转换器StringToUserConversion
	数据格式化相关FormattingConversionServiceFactoryBean  默认的格式beaFormattingConversionServiceFactoryBean-->
	<mvc:annotation-driven conversion-service="conversionService" />
	<!-- 自定义conversionService -->
	<bean id="conversionService"
		 class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.baobaotao.conversion.StringToUserConversion"></bean>
				<bean class="com.baobaotao.conversion.StringToPhoneNumberConverter"></bean>
				<bean class="com.baobaotao.conversion.PhoneNumberToStringConverter"></bean>
			</list>
		</property>
		<!--
		3.1后支持？
		 <property name="formatters">
 	        <list>
 	            <bean class="com.baobaotao.conversion.PhoneNumberFormatAnnotationFormatterFactory"/>
 	        </list>
 	    </property> -->
	</bean>
	<!-- web容器的转换器,优先级最低 -->
	<!--  
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="WebBindingInitializer">
			<bean class="com.baobaotao.conversion.MyBingdingInitialzer"></bean>
		</property>
	</bean>-->
	
	
	 <!-- 导出execl pdf相关配置 -->
	 <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	 	<property name="order" value="10"></property>
	 </bean>
	 <bean id="userListExcel" class="com.baobaotao.view.UserListExcel"></bean>
	 <bean id="userListPdfView" class="com.baobaotao.view.UserListPdfView"></bean>
	 <!-- 上传有关配置文件 -->
	 <bean id="multipartResolver" 
	 	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 		<property name="defaultEncoding" value="UTF-8"></property> <!-- 跟jsp的编码要一致 -->
	 		<property name="maxUploadSize" value="5242880"></property>
	 		<property name="uploadTempDir" value="views"></property><!-- 临时存放地点,上传完自动delete -->
	 	</bean>
</beans>
